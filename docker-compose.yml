version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: fleetly-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-fleetly_root_2024}
      MYSQL_DATABASE: ${DB_NAME:-fleetly}
      MYSQL_USER: ${DB_USER:-fleetly_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-fleetly_pass_2024}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    networks:
      - fleetly-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fleetly-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=${DB_NAME:-fleetly}
      - DB_USER=${DB_USER:-fleetly_user}
      - DB_PASSWORD=${DB_PASSWORD:-fleetly_pass_2024}
      - GMAIL_USER=${GMAIL_USER}
      - GMAIL_APP_PASSWORD=${GMAIL_APP_PASSWORD}
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-change-in-production}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-24h}
      - FROM_NAME=${FROM_NAME:-Fleetly System}
      - APP_URL=${APP_URL:-http://localhost:3000}
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - fleetly-network
    volumes:
      - ./uploads:/app/uploads

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: fleetly-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - fleetly-network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  fleetly-network:
    driver: bridge
