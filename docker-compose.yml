version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: fleetly-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${DB_NAME:-fleetly_db}
      MYSQL_USER: ${DB_USER:-fleetly_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-fleetly_password}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./database/seed.sql:/docker-entrypoint-initdb.d/02-seed.sql
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - fleetly-network

  # Fleetly Application
  fleetly-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fleetly-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=${DB_USER:-fleetly_user}
      - DB_PASSWORD=${DB_PASSWORD:-fleetly_password}
      - DB_NAME=${DB_NAME:-fleetly_db}
      - DB_SSL=false
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-24h}
      - TEMP_ADMIN_EMAIL=${TEMP_ADMIN_EMAIL:-admin}
      - TEMP_ADMIN_PASSWORD=${TEMP_ADMIN_PASSWORD:-testpassword}
      - FROM_NAME=${FROM_NAME:-Fleetly System}
      - APP_URL=${APP_URL:-http://localhost:3000}
      - EXCHANGE_API_URL=${EXCHANGE_API_URL}
      - EXCHANGE_API_KEY=${EXCHANGE_API_KEY}
    depends_on:
      - mysql
    networks:
      - fleetly-network
    volumes:
      - ./uploads:/app/uploads

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: fleetly-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - fleetly-network

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: fleetly-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - fleetly-app
    networks:
      - fleetly-network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  fleetly-network:
    driver: bridge
